{"version":3,"file":"e0525e89-f68c1384a7c46649cb74.js","mappings":"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","sources":["webpack://gatsby-casper/./src/templates/post.tsx"],"sourcesContent":["import { format } from 'date-fns';\nimport { graphql, Link } from 'gatsby';\nimport { GatsbyImage, getSrc, getImage } from 'gatsby-plugin-image';\nimport * as _ from 'lodash';\nimport { lighten, setLightness } from 'polished';\nimport React from 'react';\nimport { Helmet } from 'react-helmet';\n\nimport { css } from '@emotion/react';\nimport styled from '@emotion/styled';\n\nimport { Footer } from '../components/Footer';\nimport SiteNav, { SiteNavMain } from '../components/header/SiteNav';\nimport PostContent from '../components/PostContent';\nimport { ReadNext } from '../components/ReadNext';\nimport { Subscribe } from '../components/subscribe/Subscribe';\nimport { Wrapper } from '../components/Wrapper';\nimport IndexLayout from '../layouts';\nimport { colors } from '../styles/colors';\nimport { inner, outer, SiteMain } from '../styles/shared';\nimport config from '../website-config';\nimport { AuthorList } from '../components/AuthorList';\n\n// @ts-expect-error - Disqus import missing type info, just ignore\nimport { Disqus, CommentCount } from 'gatsby-plugin-disqus';\n\nexport interface Author {\n  id: string;\n  bio: string;\n  avatar: any;\n}\n\ninterface PageTemplateProps {\n  location: Location;\n  data: {\n    logo: {\n      childImageSharp: {\n        fixed: any;\n      };\n    };\n    markdownRemark: {\n      html: string;\n      htmlAst: any;\n      excerpt: string;\n      frontmatter: {\n        title: string;\n        date: string;\n        userDate: string;\n        image: any;\n        excerpt: string;\n        tags: string[];\n        author: Author[];\n      };\n      fields: {\n        readingTime: {\n          text: string;\n        };\n      };\n    };\n    relatedPosts: {\n      totalCount: number;\n      edges: Array<{\n        node: {\n          timeToRead: number;\n          frontmatter: {\n            title: string;\n            date: string;\n          };\n          fields: {\n            slug: string;\n          };\n        };\n      }>;\n    };\n  };\n  pageContext: {\n    prev: PageContext;\n    next: PageContext;\n  };\n}\n\nexport interface PageContext {\n  excerpt: string;\n  fields: {\n    slug: string;\n    readingTime: {\n      text: string;\n    };\n  };\n  frontmatter: {\n    image: any;\n    excerpt: string;\n    title: string;\n    date: string;\n    draft?: boolean;\n    tags: string[];\n    author: Author[];\n  };\n}\n\nconst PageTemplate = ({ data, pageContext, location }: PageTemplateProps) => {\n  const post = data.markdownRemark;\n  let width: number | undefined;\n  let height: number | undefined;\n  if (post.frontmatter.image) {\n    width = getImage(post.frontmatter.image)?.width;\n    height = getImage(post.frontmatter.image)?.height;\n  }\n\n  const disqusConfig = {\n    url: `${config.siteUrl + location.pathname}`,\n    title: post.frontmatter.title,\n  };\n\n  const date = new Date(post.frontmatter.date);\n  // 2018-08-20\n  const datetime = format(date, 'yyyy-MM-dd');\n  // 20 AUG 2018\n  const displayDatetime = format(date, 'dd LLL yyyy');\n\n  return (\n    <IndexLayout className=\"post-template\">\n      <Helmet>\n        <html lang={config.lang} />\n        <title>{post.frontmatter.title}</title>\n\n        <meta name=\"description\" content={post.frontmatter.excerpt || post.excerpt} />\n        <meta property=\"og:site_name\" content={config.title} />\n        <meta property=\"og:type\" content=\"article\" />\n        <meta property=\"og:title\" content={post.frontmatter.title} />\n        <meta property=\"og:description\" content={post.frontmatter.excerpt || post.excerpt} />\n        <meta property=\"og:url\" content={config.siteUrl + location.pathname} />\n        {post.frontmatter.image && (\n          <meta\n            property=\"og:image\"\n            content={`${config.siteUrl}${getSrc(post.frontmatter.image)}`}\n          />\n        )}\n        <meta property=\"article:published_time\" content={post.frontmatter.date} />\n        {/* not sure if modified time possible */}\n        {/* <meta property=\"article:modified_time\" content=\"2018-08-20T15:12:00.000Z\" /> */}\n        {post.frontmatter.tags && (\n          <meta property=\"article:tag\" content={post.frontmatter.tags[0]} />\n        )}\n\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\n        <meta name=\"twitter:title\" content={post.frontmatter.title} />\n        <meta name=\"twitter:description\" content={post.frontmatter.excerpt || post.excerpt} />\n        <meta name=\"twitter:url\" content={config.siteUrl + location.pathname} />\n        {post.frontmatter.image && (\n          <meta\n            name=\"twitter:image\"\n            content={`${config.siteUrl}${getSrc(post.frontmatter.image)}`}\n          />\n        )}\n        <meta name=\"twitter:label1\" content=\"Written by\" />\n        <meta name=\"twitter:data1\" content={post.frontmatter.author[0].id} />\n        <meta name=\"twitter:label2\" content=\"Filed under\" />\n        {post.frontmatter.tags && <meta name=\"twitter:data2\" content={post.frontmatter.tags[0]} />}\n        {config.twitter && (\n          <meta\n            name=\"twitter:site\"\n            content={`@${config.twitter.split('https://twitter.com/')[1]}`}\n          />\n        )}\n        {config.twitter && (\n          <meta\n            name=\"twitter:creator\"\n            content={`@${config.twitter.split('https://twitter.com/')[1]}`}\n          />\n        )}\n        {width && <meta property=\"og:image:width\" content={width?.toString()} />}\n        {height && <meta property=\"og:image:height\" content={height?.toString()} />}\n      </Helmet>\n      <Wrapper css={PostTemplate}>\n        <header className=\"site-header\">\n          <div css={[outer, SiteNavMain]}>\n            <div css={inner}>\n              <SiteNav isPost post={post.frontmatter} />\n            </div>\n          </div>\n        </header>\n        <main id=\"site-main\" className=\"site-main\" css={[SiteMain, outer]}>\n          <div css={inner}>\n            {/* TODO: no-image css tag? */}\n            <article css={[PostFull, !post.frontmatter.image && NoImage]}>\n              <PostFullHeader className=\"post-full-header\">\n                <PostFullTags className=\"post-full-tags\">\n                  {post.frontmatter.tags && post.frontmatter.tags.length > 0 && config.showAllTags && (\n                    post.frontmatter.tags.map(tag => (\n                      <React.Fragment key={tag}>\n                        <Link to={`/tags/${_.kebabCase(tag)}/`}>{tag}</Link><b>&nbsp;</b>\n                      </React.Fragment>\n                    ))\n                  )}\n                  {post.frontmatter.tags && post.frontmatter.tags.length > 0 && !config.showAllTags && (\n                    <Link to={`/tags/${_.kebabCase(post.frontmatter.tags[0])}/`}>\n                      {post.frontmatter.tags[0]}\n                    </Link>\n                  )}\n                </PostFullTags>\n                <PostFullTitle className=\"post-full-title\">{post.frontmatter.title}</PostFullTitle>\n                <PostFullCustomExcerpt className=\"post-full-custom-excerpt\">\n                  {post.frontmatter.excerpt}\n                </PostFullCustomExcerpt>\n                <PostFullByline className=\"post-full-byline\">\n                  <section className=\"post-full-byline-content\">\n                    <AuthorList authors={post.frontmatter.author} tooltip=\"large\" />\n                    <section className=\"post-full-byline-meta\">\n                      <h4 className=\"author-name\">\n                        {post.frontmatter.author.map(author => (\n                          <Link key={author.id} to={`/author/${_.kebabCase(author.id)}/`}>\n                            {author.id}\n                          </Link>\n                        ))}\n                      </h4>\n                      <div className=\"byline-meta-content\">\n                        <time className=\"byline-meta-date\" dateTime={datetime}>\n                          {displayDatetime}\n                        </time>\n                        <span className=\"byline-reading-time\">\n                          <span className=\"bull\">&bull;</span>\n                          {post.fields.readingTime.text}\n                        </span>\n                        <span className=\"byline-disqus-comments\">\n                          <span className=\"bull\">&bull;</span>\n                          <CommentCount config={disqusConfig} placeholder=\"...\" />\n                        </span>\n                      </div>\n                    </section>\n                  </section>\n                </PostFullByline>\n              </PostFullHeader>\n\n              {post.frontmatter.image && (\n                <PostFullImage>\n                  <GatsbyImage\n                    image={getImage(post.frontmatter.image)!}\n                    style={{ height: '100%' }}\n                    alt={post.frontmatter.title} />\n                </PostFullImage>\n              )}\n              <PostContent htmlAst={post.htmlAst} />\n              <Disqus config={disqusConfig}/>\n\n              {/* The big email subscribe modal content */}\n              {config.showSubscribe && <Subscribe title={config.title} />}\n            </article>\n          </div>\n        </main>\n\n        <ReadNext\n          currentPageSlug={location.pathname}\n          tags={post.frontmatter.tags}\n          relatedPosts={data.relatedPosts}\n          pageContext={pageContext}\n        />\n\n        <Footer />\n      </Wrapper>\n    </IndexLayout>\n  );\n};\n\nconst PostTemplate = css`\n  .site-main {\n    margin-top: 64px;\n    background: #fff;\n    padding-bottom: 4vw;\n  }\n\n  @media (prefers-color-scheme: dark) {\n    .site-main {\n      /* background: var(--darkmode); */\n      background: ${colors.darkmode};\n    }\n  }\n`;\n\nexport const PostFull = css`\n  position: relative;\n  z-index: 50;\n`;\n\nexport const NoImage = css`\n  .post-full-content {\n    padding-top: 0;\n  }\n\n  .post-full-content:before,\n  .post-full-content:after {\n    display: none;\n  }\n`;\n\nexport const PostFullHeader = styled.header`\n  position: relative;\n  margin: 0 auto;\n  padding: 70px 170px 50px;\n  border-top-left-radius: 3px;\n  border-top-right-radius: 3px;\n\n  @media (max-width: 1170px) {\n    padding: 60px 11vw 50px;\n  }\n\n  @media (max-width: 800px) {\n    padding-right: 5vw;\n    padding-left: 5vw;\n  }\n\n  @media (max-width: 500px) {\n    padding: 20px 0 35px;\n  }\n`;\n\nconst PostFullTags = styled.section`\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  /* color: var(--midgrey); */\n  color: ${colors.midgrey};\n  font-size: 1.3rem;\n  line-height: 1.4em;\n  font-weight: 600;\n  text-transform: uppercase;\n`;\n\nconst PostFullCustomExcerpt = styled.p`\n  margin: 20px 0 0;\n  color: var(--midgrey);\n  font-family: Georgia, serif;\n  font-size: 2.3rem;\n  line-height: 1.4em;\n  font-weight: 300;\n\n  @media (max-width: 500px) {\n    font-size: 1.9rem;\n    line-height: 1.5em;\n  }\n\n  @media (prefers-color-scheme: dark) {\n    /* color: color(var(--midgrey) l(+10%)); */\n    color: ${lighten('0.1', colors.midgrey)};\n  }\n`;\n\nconst PostFullByline = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin: 35px 0 0;\n  padding-top: 15px;\n  /* border-top: 1px solid color(var(--lightgrey) l(+10%)); */\n  border-top: 1px solid ${lighten('0.1', colors.lightgrey)};\n\n  .post-full-byline-content {\n    flex-grow: 1;\n    display: flex;\n    align-items: flex-start;\n  }\n\n  .post-full-byline-content .author-list {\n    justify-content: flex-start;\n    padding: 0 12px 0 0;\n  }\n\n  .post-full-byline-meta {\n    margin: 2px 0 0;\n    /* color: color(var(--midgrey) l(+10%)); */\n    color: ${lighten('0.1', colors.midgrey)};\n    font-size: 1.2rem;\n    line-height: 1.2em;\n    letter-spacing: 0.2px;\n    text-transform: uppercase;\n  }\n\n  .post-full-byline-meta h4 {\n    margin: 0 0 3px;\n    font-size: 1.3rem;\n    line-height: 1.4em;\n    font-weight: 500;\n  }\n\n  .post-full-byline-meta h4 a {\n    /* color: color(var(--darkgrey) l(+10%)); */\n    color: ${lighten('0.1', colors.darkgrey)};\n  }\n\n  .post-full-byline-meta h4 a:hover {\n    /* color: var(--darkgrey); */\n    color: ${colors.darkgrey};\n  }\n\n  .post-full-byline-meta .bull {\n    display: inline-block;\n    margin: 0 4px;\n    opacity: 0.6;\n  }\n\n  @media (prefers-color-scheme: dark) {\n    /* border-top-color: color(var(--darkmode) l(+15%)); */\n    border-top-color: ${lighten('0.15', colors.darkmode)};\n\n    .post-full-byline-meta h4 a {\n      color: rgba(255, 255, 255, 0.75);\n    }\n\n    .post-full-byline-meta h4 a:hover {\n      color: #fff;\n    }\n  }\n`;\n\nexport const PostFullTitle = styled.h1`\n  margin: 0 0 0.2em;\n  color: ${setLightness('0.05', colors.darkgrey)};\n  @media (max-width: 500px) {\n    margin-top: 0.2em;\n    font-size: 3.3rem;\n  }\n\n  @media (prefers-color-scheme: dark) {\n    color: rgba(255, 255, 255, 0.9);\n  }\n`;\n\nconst PostFullImage = styled.figure`\n  margin: 25px 0 50px;\n  height: 800px;\n  background: ${colors.lightgrey} center center;\n  background-size: cover;\n  border-radius: 5px;\n\n  @media (max-width: 1170px) {\n    margin: 25px -6vw 50px;\n    border-radius: 0;\n    img {\n      max-width: 1170px;\n    }\n  }\n\n  @media (max-width: 800px) {\n    height: 400px;\n  }\n  @media (max-width: 500px) {\n    margin-bottom: 4vw;\n    height: 350px;\n  }\n`;\n\nexport const query = graphql`query ($slug: String, $primaryTag: String) {\n  logo: file(relativePath: {eq: \"img/molarfox-logo.png\"}) {\n    childImageSharp {\n      gatsbyImageData(layout: FIXED)\n    }\n  }\n  markdownRemark(fields: {slug: {eq: $slug}}) {\n    html\n    htmlAst\n    excerpt\n    fields {\n      readingTime {\n        text\n      }\n    }\n    frontmatter {\n      title\n      userDate: date(formatString: \"D MMMM YYYY\")\n      date\n      tags\n      excerpt\n      image {\n        childImageSharp {\n          gatsbyImageData(layout: FULL_WIDTH)\n        }\n      }\n      author {\n        id\n        bio\n        avatar {\n          children {\n            ... on ImageSharp {\n              gatsbyImageData(layout: FULL_WIDTH, breakpoints: [40, 80, 120])\n            }\n          }\n        }\n      }\n    }\n  }\n  relatedPosts: allMarkdownRemark(\n    filter: {frontmatter: {tags: {in: [$primaryTag]}, draft: {ne: true}}}\n    limit: 5\n    sort: {fields: [frontmatter___date], order: DESC}\n  ) {\n    totalCount\n    edges {\n      node {\n        id\n        excerpt\n        frontmatter {\n          title\n          date\n        }\n        fields {\n          readingTime {\n            text\n          }\n          slug\n        }\n      }\n    }\n  }\n}\n`;\n\nexport default PageTemplate;\n"],"names":["PostTemplate","css","colors","PostFull","NoImage","PostFullHeader","PostFullTags","PostFullCustomExcerpt","lighten","PostFullByline","PostFullTitle","setLightness","PostFullImage","data","pageContext","location","post","markdownRemark","width","height","frontmatter","image","getImage","disqusConfig","url","config","pathname","title","date","Date","datetime","format","displayDatetime","className","lang","name","content","excerpt","property","getSrc","tags","author","id","toString","outer","SiteNavMain","inner","isPost","SiteMain","length","map","tag","key","to","authors","tooltip","dateTime","fields","readingTime","text","placeholder","G","style","alt","htmlAst","currentPageSlug","relatedPosts"],"sourceRoot":""}